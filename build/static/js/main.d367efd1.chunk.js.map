{"version":3,"sources":["components/Layout.js","Utils.js","components/Room.js","components/RoomMap.js","Config.js","components/Map.js","components/RoomList.js","components/ImageMapper.js","App.js","registerServiceWorker.js","index.js"],"names":["Layout","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","reactstrap_es","props","children","Component","displayName","name","Utils","formatSize","height","width","maxHeight","maxWidth","widthScaling","heightScaling","Room","_this","call","onCoordinatesClick","event","preventDefault","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","fullLink","pad","email","window","open","state","imageWidth","maxheight","bind","assertThisInitialized","onMouseOut","onCoordinatesMouseOver","rowTarget","document","getElementById","undefined","classList","add","hasHighlight","drawRedRectangleForTarget","coordinates","drawRectangleForTarget","canvasName","remove","clearCanvas","n","z","length","Array","join","x","y","xx","yy","color","ctx","getContext","scaling","imageHeight","shouldScale","fillStyle","coords","beginPath","moveTo","lineTo","closePath","fill","canvas","clearRect","capacity","parsedCoords","parsedTitle","onMouseOver","onClick","className","shape","href","title","alt","RoomMap","addRoomToMap","input","setState","rooms","concat","toConsumableArray","newArray","console","log","target","_this2","id","mapName","map","room","i","Room_Room","Config","APIEndpoint","Map","onMouseEnter","highlightRow","removeHighligtFromRow","originalWidth","originalHeight","mousePressed","mousedownStartX","mousedownStartY","mousedownEndX","mousedownEndY","imageData","isLoading","errorText","handleClick","row","getAllPosts","getElementsByClassName","q","queryString","split","mapTarget","token","mapId","loadingMessage","fetch","method","then","response","json","body","catch","error","_this3","cx","cy","r","stroke","strokeWidth","stroke-offset","d","trim","Fragment","draggable","src","useMap","RoomMap_RoomMap","sort","b","RoomList","removeRoom","handleRemoveRoom","type","ImageMapper","index","array","filter","item","reRenderAllAreasForCanvas","handleIconUpdate","objectUrl","URL","createObjectURL","files","img","Image","parent","onload","iconImageData","handleImageUpdate","naturalHeight","naturalWidth","displayImage","onAreaAdded","area","current","getCursorPosition","rect","getBoundingClientRect","clientX","left","clientY","top","targetToMap","getAttribute","mapCoords","trackMouseMove","submitRoom","roomEmail","roomName","some","roomCapacity","roomCap","clearDrawingCanvas","handleTextUpdate","React","createRef","displayTitle","hasParams","internalMode","exportMap","forEach","redrawRectangleForTarget","url","blob","Promise","resolve","reject","reader","FileReader","onloadend","result","onerror","readAsDataURL","dataUrl","content","data","JSON","stringify","blobUrl","templink","setAttribute","click","location","search","onMouseDown","onMouseUp","onMouseMove","onChange","RoomList_RoomList","Map_Map","App","Layout_Layout","Route","path","component","strict","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","baseUrl","getElementsByTagName","rootElement","ReactDOM","render","BrowserRouter","basename","App_App","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d367efd1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\n\r\nexport class Layout extends Component {\r\n    static displayName = Layout.name;\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    {this.props.children}\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","const Utils = {\r\n    formatSize(height, width, maxHeight, maxWidth) {\r\n        var widthScaling = 1;\r\n        var heightScaling = 1;\r\n\r\n        if (height > maxHeight) {\r\n            heightScaling = (maxHeight / height)\r\n        }\r\n        else {\r\n            heightScaling = 1\r\n        }\r\n\r\n        if (width > maxWidth) {\r\n            widthScaling = (maxWidth / width);\r\n        }\r\n        else {\r\n            widthScaling = 1\r\n        }\r\n\r\n        if (heightScaling > widthScaling) {\r\n            return widthScaling;\r\n        }\r\n        else {\r\n            return heightScaling;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Utils","import React, { Component } from 'react';\r\nimport Utils from '../Utils';\r\n\r\nexport class Room extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            imageWidth: 0,\r\n            maxheight: 500,\r\n            maxWidth: 1200\r\n        }\r\n\r\n        this.onCoordinatesClick.bind(this);\r\n        this.onMouseOut.bind(this);\r\n        this.onCoordinatesMouseOver.bind(this);\r\n    }\r\n\r\n    onCoordinatesMouseOver() {\r\n        var rowTarget = document.getElementById(this.props.email);\r\n        if (rowTarget !== undefined && rowTarget !== null) {\r\n            rowTarget.classList.add(\"highlightRow\");\r\n        }\r\n        if (this.props.hasHighlight === true) {\r\n\r\n            this.drawRedRectangleForTarget(this.props.coordinates[0], this.props.coordinates[1], this.props.coordinates[2], this.props.coordinates[3], \"highlightingCanvas\");\r\n        }\r\n        else {\r\n            this.drawRectangleForTarget(this.props.coordinates[0], this.props.coordinates[1], this.props.coordinates[2], this.props.coordinates[3], this.props.canvasName);\r\n        }\r\n    }\r\n\r\n    onMouseOut() {\r\n        var rowTarget = document.getElementById(this.props.email);\r\n        if (rowTarget !== undefined && rowTarget !== null) {\r\n            rowTarget.classList.remove(\"highlightRow\");\r\n        }\r\n\r\n        this.clearCanvas();\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.drawRectangleForTarget(this.props.coordinates[0], this.props.coordinates[1], this.props.coordinates[2], this.props.coordinates[3], this.props.canvasName);\r\n    }\r\n\r\n    onCoordinatesClick = (event) => {\r\n        event.preventDefault();\r\n        var date = new Date();\r\n        var year = date.getFullYear();\r\n        var month = date.getMonth();\r\n        var day = date.getDate();\r\n        var hours = date.getHours();\r\n\r\n        var startDateString = year + \"-\" + this.pad((month + 1), 2) + \"-\" + this.pad(day, 2) + \"T\" + this.pad(hours, 2) + \":00:00\";\r\n        var endDateString = year + \"-\" + this.pad((month + 1), 2) + \"-\" + this.pad(day, 2) + \"T\" + this.pad(hours, 2) + \":30:00\";\r\n\r\n        var teamsLink = \"https://teams.microsoft.com/l/meeting/new?subject=Room%20Booking&startTime=\" + startDateString + \"&endTime=\" + endDateString + \"&attendees=\"\r\n\r\n        var fullLink = teamsLink + this.props.email;\r\n        window.open(fullLink, \"_blank\");\r\n    }\r\n\r\n    pad(n, width, z) {\r\n        z = z || '0';\r\n        n = n + '';\r\n        return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\r\n    }\r\n\r\n    drawRectangleForTarget(x, y, xx, yy, canvasName, color) {\r\n        var canvas = document.getElementById(canvasName);\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var scaling = Utils.formatSize(this.props.imageHeight, this.props.imageWidth, this.state.maxheight, this.state.maxWidth);\r\n\r\n        if (this.props.shouldScale === false) {\r\n            scaling = 1\r\n        }\r\n\r\n        ctx.height = this.props.imageHeight;\r\n        ctx.width = this.props.imageWidth;\r\n        ctx.fillStyle = \"#6264A7\";\r\n\r\n        var coords = [\r\n            (x * scaling),\r\n            (y * scaling),\r\n            (xx * scaling),\r\n            (yy * scaling)\r\n        ];\r\n\r\n        ctx.beginPath();\r\n\r\n        ctx.moveTo(coords[0], coords[1])\r\n        ctx.lineTo(coords[0], coords[1])\r\n        ctx.lineTo(coords[2], coords[1])\r\n        ctx.lineTo(coords[2], coords[3])\r\n        ctx.lineTo(coords[0], coords[3])\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    drawRedRectangleForTarget(x, y, xx, yy, canvasName) {\r\n        var canvas = document.getElementById(canvasName);\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var scaling = Utils.formatSize(this.props.imageHeight, this.props.imageWidth, this.state.maxheight, this.state.maxWidth);\r\n        if (this.props.shouldScale === false) {\r\n            scaling = 1\r\n        }\r\n        ctx.height = this.props.imageHeight;\r\n        ctx.width = this.props.imageWidth;\r\n        ctx.fillStyle = \"red\";\r\n\r\n        var coords = [\r\n            (x * scaling),\r\n            (y * scaling),\r\n            (xx * scaling),\r\n            (yy * scaling)\r\n        ];\r\n\r\n        ctx.beginPath();\r\n\r\n        ctx.moveTo(coords[0], coords[1])\r\n        ctx.lineTo(coords[0], coords[1])\r\n        ctx.lineTo(coords[2], coords[1])\r\n        ctx.lineTo(coords[2], coords[3])\r\n        ctx.lineTo(coords[0], coords[3])\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    clearCanvas() {\r\n        if (this.props.hasHighlight === true) {\r\n            var canvas = document.getElementById(\"highlightingCanvas\");\r\n            var ctx = canvas.getContext(\"2d\");\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const name = this.props.name;\r\n        const email = this.props.email;\r\n        const capacity = this.props.capacity;\r\n        var scaling = Utils.formatSize(this.props.imageHeight, this.props.imageWidth, this.state.maxheight, this.state.maxWidth);\r\n        const parsedCoords = \"\" + (this.props.coordinates[0] * scaling) + \", \" + (this.props.coordinates[1] * scaling) + \", \" + (this.props.coordinates[2] * scaling) + \", \" + (this.props.coordinates[3] * scaling) + \"\";\r\n        const parsedTitle = name + \" (\" + capacity + \" capacity)\";\r\n        return (\r\n            <area\r\n                onMouseOver={this.onCoordinatesMouseOver.bind(this)}\r\n                onMouseOut={this.onMouseOut.bind(this)}\r\n                onClick={this.onCoordinatesClick.bind(this)}\r\n                className=\"mapcoords\"\r\n                shape=\"rect\"\r\n                //id={name}\r\n                coords={parsedCoords}\r\n                href=\"#\"\r\n                title={parsedTitle}\r\n                alt={name}\r\n                email={email} />\r\n        );\r\n    }\r\n}","import { Room } from './Room';\r\nimport React, { Component } from 'react';\r\n\r\nexport class RoomMap extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            imageHeight: 0,\r\n            imageWidth: 0,\r\n            maxheight: 500,\r\n            maxWidth: 1200,\r\n            scaling: 1\r\n        }\r\n\r\n        this.onCoordinatesMouseOver.bind(this);\r\n        this.onMouseOut.bind(this);\r\n        this.onCoordinatesClick.bind(this);\r\n    }\r\n\r\n   \r\n    addRoomToMap = (input) => {\r\n        this.setState({\r\n            rooms: [...input, this.state.rooms]\r\n        })\r\n\r\n        var newArray = [input, ...this.state.rooms];\r\n        this.setState({\r\n            rooms: newArray\r\n        });\r\n        console.log(\"RoomMap - updating rooms \" + (this.state.rooms))\r\n    }\r\n\r\n    onCoordinatesMouseOver = (event) => {\r\n        console.log(\"Mouse over \" + event.target);\r\n    }\r\n\r\n    onMouseOut = (event) => {\r\n        console.log(\"Mouse out \" + event.target);\r\n    }\r\n\r\n    onCoordinatesClick = (event) => {\r\n        console.log(\"Coordinates click \" + event.target);\r\n    }\r\n\r\n    render() {\r\n        return (<map id=\"map\" name={this.props.mapName}>\r\n            {\r\n                this.props.rooms.map((room, i) => {\r\n                    return (<Room key={i} name={room.name} email={room.email} coordinates={room.coordinates} capacity={room.capacity} imageHeight={this.props.imageHeight} imageWidth={this.props.imageWidth} canvasName={this.props.canvasName} hasHighlight={this.props.hasHighlight} shouldScale={this.props.shouldScale}/>)\r\n                })\r\n            }\r\n        </map>)\r\n    }\r\n}","const Config = {\r\n    //APIEndpoint: process.env.REACT_APP_API_ENDPOINT\r\n    APIEndpoint: \"https://teams-map-maker-api.azurewebsites.net/api/\"\r\n}\r\n\r\nexport default Config;","import React, { Component } from 'react';\r\nimport { RoomMap } from './RoomMap';\r\nimport '../css/style.css';\r\nimport Config from '../Config';\r\nimport Utils from '../Utils';\r\n\r\nexport class Map extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const scaling = 1;\r\n\r\n        this.state = {\r\n            imageWidth: (1440 * scaling),\r\n            imageHeight: (741 * scaling),\r\n            originalWidth: 0,\r\n            originalHeight: 0,\r\n            scaling: scaling,\r\n            mousePressed: false,\r\n            mousedownStartX: 0,\r\n            mousedownStartY: 0,\r\n            mousedownEndX: 0,\r\n            mousedownEndY: 0,\r\n            rooms: [],\r\n            imageData: \"\",\r\n            isLoading: true,\r\n            errorText: \"\",\r\n            maxHeight: 500,\r\n            maxWidth: 1200\r\n        }\r\n\r\n        this.onMouseOut.bind(this);\r\n        this.onMouseEnter.bind(this);\r\n        this.clearCanvas.bind(this);\r\n        this.drawRectangleForTarget.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(email, i) {\r\n        var date = new Date();\r\n        var year = date.getFullYear();\r\n        var month = date.getMonth();\r\n        var day = date.getDate();\r\n        var hours = date.getHours();\r\n\r\n        var startDateString = year + \"-\" + this.pad((month + 1), 2) + \"-\" + this.pad(day, 2) + \"T\" + this.pad(hours, 2) + \":00:00\";\r\n        var endDateString = year + \"-\" + this.pad((month + 1), 2) + \"-\" + this.pad(day, 2) + \"T\" + this.pad(hours, 2) + \":30:00\";\r\n\r\n        var teamsLink = \"https://teams.microsoft.com/l/meeting/new?subject=Room%20Booking&startTime=\" + startDateString + \"&endTime=\" + endDateString + \"&attendees=\"\r\n\r\n        var fullLink = teamsLink + email;\r\n\r\n        window.open(fullLink, \"_blank\");\r\n\r\n    }\r\n\r\n    pad(n, width, z) {\r\n        z = z || '0';\r\n        n = n + '';\r\n        return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\r\n    }\r\n\r\n    onMouseEnter = (room) => {\r\n        if (room.coordinates !== undefined) {\r\n            this.drawRectangleForTarget(room.coordinates[0], room.coordinates[1], room.coordinates[2], room.coordinates[3], \"highlightingCanvas\");\r\n            if (room.email !== undefined) {\r\n                this.highlightRow(document.getElementById(room.email));\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseOut = (room) => {\r\n        if (room.email !== undefined) {\r\n            this.removeHighligtFromRow(document.getElementById(room.email))\r\n        }\r\n\r\n        this.clearCanvas();\r\n    }\r\n\r\n    highlightRow(row) {\r\n        row.classList.add(\"highlightRow\");\r\n    }\r\n\r\n    removeHighligtFromRow(row) {\r\n        row.classList.remove(\"highlightRow\");\r\n    }\r\n\r\n    clearCanvas() {\r\n        var canvas = document.getElementById(\"highlightingCanvas\");\r\n        var ctx = canvas.getContext(\"2d\");\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    drawRectangleForTarget(x, y, xx, yy, canvasName) {\r\n        var canvas = document.getElementById(canvasName);\r\n        var ctx = canvas.getContext(\"2d\");\r\n\r\n        ctx.height = this.state.imageHeight;\r\n        ctx.width = this.state.imageWidth;\r\n        ctx.fillStyle = \"red\";\r\n\r\n        // use original for matching positioning\r\n        var scaling = this.state.scaling;\r\n        var coords = [\r\n            (x * scaling),\r\n            (y * scaling),\r\n            (xx * scaling),\r\n            (yy * scaling)\r\n        ];\r\n\r\n        ctx.beginPath();\r\n\r\n        ctx.moveTo(coords[0], coords[1])\r\n        ctx.lineTo(coords[0], coords[1])\r\n        ctx.lineTo(coords[2], coords[1])\r\n        ctx.lineTo(coords[2], coords[3])\r\n        ctx.lineTo(coords[0], coords[3])\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getAllPosts();\r\n\r\n        var container = document.getElementsByClassName(\"container\")[0];\r\n        container.classList.remove(\"container\");\r\n    }\r\n\r\n    getAllPosts() {\r\n        var q = this.props.queryString.split(\"map=\");\r\n        var mapTarget = q[1].split('&');\r\n        var token = q[1].split('token=')[1];\r\n\r\n        var mapId = mapTarget[0];\r\n        this.setState({\r\n            isLoading: true,\r\n            loadingMessage: \"Loading map\"\r\n        })\r\n\r\n        fetch(`${Config.APIEndpoint}GetTeamsMapData?map=${mapId}&token=${token}`, {\r\n            method: 'GET'\r\n        }).then(response => {\r\n            response.json().then((body) => {\r\n                var scaling = Utils.formatSize(body.imageHeight, body.imageWidth, this.state.maxHeight, this.state.maxWidth);\r\n\r\n                this.setState({\r\n                    rooms: body.rooms,\r\n                    imageData: body.imageData,\r\n                    imageHeight: (body.imageHeight * scaling),\r\n                    imageWidth: (body.imageWidth * scaling),\r\n                    originalHeight: body.imageHeight,\r\n                    originalWidth: body.imageWidth,\r\n                    isLoading: false,\r\n                    scaling: scaling\r\n                })\r\n\r\n            }).catch((error) => {\r\n                console.log(error);\r\n                this.setState({\r\n                    isLoading: false,\r\n                    errorText: \"Error while fetching map: \" + error\r\n                })\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            this.setState({\r\n                isLoading: false,\r\n                errorText: \"Error: \" + error\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"viewMap\">\r\n                {\r\n                    this.state.isLoading ?\r\n                        <div className=\"row\">\r\n                            <div className=\"loading-div\">\r\n                                <svg id=\"loading-spinner\" width=\"100\" height=\"100\">\r\n                                    <circle cx=\"50\" cy=\"50\" r=\"37.5\" stroke=\"#0047b3\" strokeWidth=\"10\" fill=\"transparent\" stroke-offset=\"3\" />\r\n                                    <path stroke=\"#ccc\" strokeWidth=\"10.5\"\r\n                                        d=\"M 25, 22\r\n                                    a 37.5,37.5 0 1,0 50,0\" fill=\"none\" />\r\n                                </svg>\r\n                                <p>Loading map</p>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        this.state.errorText.trim() !== \"\" ?\r\n                            <p>{this.state.errorText}</p>\r\n                            :\r\n                            <>\r\n                                <div className=\"sticky-top map-div\">\r\n                                    <canvas width={this.state.imageWidth} height={this.state.imageHeight} id=\"mapCanvas\"></canvas>\r\n                                    <canvas width={this.state.imageWidth} height={this.state.imageHeight} id=\"highlightingCanvas\"></canvas>\r\n\r\n                                    <img draggable=\"false\"\r\n                                        className=\"map maphilighted\"\r\n                                        src={this.state.imageData}\r\n                                        width={this.state.imageWidth} height={this.state.imageHeight} alt=\"officeMap\"\r\n                                        useMap=\"#mappedOffice\"\r\n                                        id=\"mapImage\" />\r\n                                    <RoomMap\r\n                                        mapName={\"mappedOffice\"}\r\n                                        canvasName={\"mapCanvas\"}\r\n                                        hasHighlight={true}\r\n                                        rooms={this.state.rooms}\r\n                                        imageHeight={this.state.originalHeight}\r\n                                        imageWidth={this.state.originalWidth} />\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <table className=\"table pointer-table table-sm col-md-6 room-table\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <th>Rooms</th>\r\n                                                </tr>\r\n                                                {\r\n                                                    // sort by room name and then map it out\r\n                                                    this.state.rooms.sort(function (a, b) {\r\n                                                        if (a.name < b.name) { return -1; }\r\n                                                        if (a.name > b.name) { return 1; }\r\n                                                        return 0;\r\n                                                    }).map((room, i) => {\r\n                                                        return (\r\n                                                            <tr key={i} id={room.email} onClick={this.handleClick.bind(this, room.email)} onMouseEnter={this.onMouseEnter.bind(room)} onMouseOut={this.onMouseOut.bind(room)} coordinates={room.coordinates}>\r\n                                                                <td onClick={this.handleClick.bind(this, room.email)} onMouseEnter={this.onMouseEnter.bind(this, room)} onMouseOut={this.onMouseOut.bind(this, room)}>{room.name} ({room.capacity})</td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <p>Click on an item either in the list or on the map to start booking a room.\r\n                                        You are only able to book rooms that are highlighted.</p>\r\n                                        <p>Hover over an item on the map to view room details.</p>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                }\r\n            </div >);\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class RoomList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.removeRoom.bind(this);\r\n    }\r\n\r\n    removeRoom(i) {\r\n        // trigger room deletion to parent ImageMapper\r\n        this.props.handleRemoveRoom(i);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    <table className=\"table table-sm table-hover col-md-12\">\r\n                        <tbody>\r\n                            <tr className='col-md-12'>\r\n                                <th className='col-md-5'>Name</th>\r\n                                <th className='col-md-5'>Email</th>\r\n                                <th className='col-md-2'>Capacity</th>\r\n                            </tr>\r\n                            {\r\n                                this.props.rooms.map((room, i) => {\r\n                                    return (\r\n                                        <tr key={i} className='col-md-12'>\r\n                                            <td className='col-md-5'>{room.name}</td>\r\n                                            <td className='col-md-5'>{room.email}</td>\r\n                                            <td className='col-md-2'>{room.capacity}</td>\r\n                                            <td>\r\n                                                <button type=\"button\" className=\"btn btn-outline-danger btn-sm\" onClick={this.removeRoom.bind(this, room)}> Remove</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { RoomMap } from './RoomMap';\r\nimport '../css/style.css';\r\nimport Config from '../Config'\r\nimport { Map } from './Map';\r\nimport { RoomList } from './RoomList';\r\n\r\nexport class ImageMapper extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const scaling = 0.8;\r\n\r\n        this.area = React.createRef();\r\n\r\n        this.state = {\r\n            imageWidth: (1440 * scaling),\r\n            imageHeight: (741 * scaling),\r\n            scaling: scaling,\r\n            mousePressed: false,\r\n            mousedownStartX: 0,\r\n            mousedownStartY: 0,\r\n            mousedownEndX: 0,\r\n            mousedownEndY: 0,\r\n            mapName: '',\r\n            roomName: '',\r\n            roomCapacity: 0,\r\n            roomEmail: '',\r\n            rooms: [],\r\n            imageData: '',\r\n            iconImageData: '',\r\n            displayImage: false,\r\n            displayTitle: true,\r\n            hasParams: true,\r\n            errorText: '',\r\n            internalMode: false,\r\n            shouldScale: false\r\n        }\r\n\r\n        this.onMouseOver.bind(this);\r\n        this.onMouseOut.bind(this);\r\n        this.getCursorPosition.bind(this);\r\n        this.trackMouseMove.bind(this);\r\n        this.submitRoom.bind(this);\r\n        this.handleTextUpdate.bind(this);\r\n        this.handleImageUpdate.bind(this);\r\n        this.exportMap.bind(this);\r\n        this.handleRemoveRoom = this.handleRemoveRoom.bind(this);\r\n        this.handleIconUpdate = this.handleIconUpdate.bind(this);\r\n    }\r\n\r\n    handleRemoveRoom = (index) => {\r\n        if (index !== -1) {\r\n            const array = this.state.rooms.filter(item => item.email !== index.email);\r\n\r\n            this.setState({\r\n                rooms: array\r\n            })\r\n\r\n            this.reRenderAllAreasForCanvas(array);\r\n        }\r\n    }\r\n\r\n    reRenderAllAreasForCanvas(array) {\r\n        // clear canvas and re-draw each room\r\n        this.clearDrawingCanvas('myCanvas');\r\n\r\n        array.forEach((room) => {\r\n            this.redrawRectangleForTarget(room.coordinates[0], room.coordinates[1], room.coordinates[2], room.coordinates[3]);\r\n        })\r\n    }\r\n\r\n    handleIconUpdate = (event) => {\r\n        var objectUrl = URL.createObjectURL(event.target.files[0])\r\n        var img = new Image();\r\n        img.src = objectUrl;\r\n\r\n        var parent = this;\r\n\r\n        img.onload = function () {\r\n            parent.setState({\r\n                iconImageData: objectUrl\r\n            })\r\n        };\r\n    }\r\n\r\n    handleImageUpdate = (event) => {\r\n        var objectUrl = URL.createObjectURL(event.target.files[0])\r\n        var img = new Image();\r\n        img.src = objectUrl;\r\n\r\n        var parent = this;\r\n\r\n        img.onload = function () {\r\n            parent.setState({\r\n                imageHeight: this.naturalHeight,\r\n                imageWidth: this.naturalWidth,\r\n                imageData: objectUrl,\r\n                displayImage: true\r\n            })\r\n        };\r\n    }\r\n\r\n    onAreaAdded = (area) => {\r\n        this.area.current.addRoomToMap(area)\r\n    }\r\n\r\n    getCursorPosition = (event) => {\r\n\r\n        var canvas = document.getElementById('mainImage');\r\n        const rect = canvas.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n        const y = event.clientY - rect.top;\r\n\r\n        if (event.type === 'mousedown') {\r\n            this.setState({\r\n                mousePressed: true,\r\n                mousedownStartX: x,\r\n                mousedownStartY: y\r\n            });\r\n\r\n        }\r\n        else {\r\n            this.setState({\r\n                mousePressed: false,\r\n                mousedownEndX: x,\r\n                mousedownEndY: y\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    onMouseOver = (event) => {\r\n        var targetToMap = document.getElementById(event.target.getAttribute('name'));\r\n        this.mapCoords(targetToMap.coords.split(','));\r\n    }\r\n\r\n    onMouseOut = (event) => {\r\n        var canvas = document.getElementById('drawingCanvas');\r\n        var ctx = canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    onCoordinatesMouseOver = (event) => {\r\n        var coords = event.target.coords.split(',');\r\n        this.mapCoords(coords);\r\n    }\r\n\r\n    trackMouseMove = (event) => {\r\n        var canvas = document.getElementById('mainImage');\r\n        var rect = canvas.getBoundingClientRect();\r\n        var x = event.clientX - rect.left;\r\n        var y = event.clientY - rect.top;\r\n        if (this.state.mousePressed) {\r\n            this.drawRectangleForTarget(this.state.mousedownStartX, this.state.mousedownStartY, x, y);\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    clearDrawingCanvas(canvasName) {\r\n        var canvas = document.getElementById(canvasName);\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        // always clear before re-drawing\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    redrawRectangleForTarget(x, y, xx, yy) {\r\n        var canvas = document.getElementById('myCanvas');\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        ctx.height = this.state.imageHeight;\r\n        ctx.width = this.state.imageWidth;\r\n        ctx.fillStyle = '#6264A7';\r\n\r\n        var coords = [x, y, xx, yy];\r\n\r\n        ctx.beginPath();\r\n\r\n        ctx.moveTo(coords[0], coords[1])\r\n        ctx.lineTo(coords[0], coords[1])\r\n        ctx.lineTo(coords[2], coords[1])\r\n        ctx.lineTo(coords[2], coords[3])\r\n        ctx.lineTo(coords[0], coords[3])\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    drawRectangleForTarget(x, y, xx, yy) {\r\n        var canvas = document.getElementById('drawingCanvas');\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        // always clear before re-drawing\r\n        this.clearDrawingCanvas('drawingCanvas');\r\n\r\n        ctx.height = this.state.imageHeight;\r\n        ctx.width = this.state.imageWidth;\r\n        ctx.fillStyle = 'green';\r\n\r\n        var coords = [x, y, xx, yy];\r\n\r\n        ctx.beginPath();\r\n\r\n        ctx.moveTo(coords[0], coords[1])\r\n        ctx.lineTo(coords[0], coords[1])\r\n        ctx.lineTo(coords[2], coords[1])\r\n        ctx.lineTo(coords[2], coords[3])\r\n        ctx.lineTo(coords[0], coords[3])\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    submitRoom = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.roomEmail.trim() === '') {\r\n            this.setState({\r\n                errorText: 'Email is required.'\r\n            })\r\n        }\r\n        else if (this.state.roomName.trim() === '') {\r\n            this.setState({\r\n                errorText: 'Email is required.'\r\n            })\r\n        }\r\n        else if (!this.state.rooms.some(item => this.state.roomEmail === item.email)) {\r\n            this.setState({\r\n                rooms: [...this.state.rooms, { name: this.state.roomName, coordinates: [this.state.mousedownStartX, this.state.mousedownStartY, this.state.mousedownEndX, this.state.mousedownEndY], email: this.state.roomEmail, capacity: this.state.roomCapacity }]\r\n            });\r\n\r\n            this.setState({\r\n                roomName: '',\r\n                roomCap: '',\r\n                roomEmail: '',\r\n                errorText: ''\r\n            })\r\n\r\n            this.clearDrawingCanvas('drawingCanvas');\r\n        }\r\n        else {\r\n            console.log('Email exist');\r\n            this.setState({\r\n                errorText: 'Email already exists.'\r\n            })\r\n        }\r\n    }\r\n\r\n    handleTextUpdate = (event) => {\r\n        if (event.target.name === 'rName') {\r\n            this.setState({\r\n                roomName: event.target.value\r\n            })\r\n        }\r\n        if (event.target.name === 'rCap') {\r\n            this.setState({\r\n                roomCapacity: event.target.value\r\n            })\r\n        }\r\n        if (event.target.name === 'rEmail') {\r\n            this.setState({\r\n                roomEmail: event.target.value\r\n            })\r\n        }\r\n        if (event.target.name === 'mName') {\r\n            this.setState({\r\n                mapName: event.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    exportMap() {\r\n        var imageData = '';\r\n        const toDataURL = url => fetch(url)\r\n            .then(response => response.blob())\r\n            .then(blob => new Promise((resolve, reject) => {\r\n                const reader = new FileReader()\r\n                reader.onloadend = () => resolve(reader.result)\r\n                reader.onerror = reject\r\n                reader.readAsDataURL(blob)\r\n            }))\r\n\r\n\r\n            console.log(Config.APIEndpoint);\r\n\r\n\r\n        toDataURL(this.state.imageData)\r\n            .then(dataUrl => {\r\n                imageData = dataUrl\r\n                var content = {\r\n                    'rooms': this.state.rooms,\r\n                    'imageData': imageData,\r\n                    'imageWidth': this.state.imageWidth,\r\n                    'imageHeight': this.state.imageHeight,\r\n                    'mapName': this.state.mapName\r\n                }\r\n\r\n                var data = JSON.stringify(content);\r\n                fetch(`${Config.APIEndpoint}/PostTeamsMapData`, {\r\n                    method: 'POST',\r\n                    body: data\r\n                }).then(response => response.blob())\r\n                    .then(blob => {\r\n                        console.log(blob);\r\n                        var blobUrl = window.URL.createObjectURL(blob);\r\n                        var templink = document.createElement('a');\r\n                        templink.href = blobUrl;\r\n                        templink.setAttribute('download', 'manifest.zip');\r\n                        templink.click();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                    });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.location.search === '' ?\r\n                        <div>\r\n                            <div className={this.state.displayTitle ? 'main-frame' : 'hidden'} >\r\n                                <canvas className={this.state.displayImage ? '' : 'hidden'} width={this.state.imageWidth} height={this.state.imageHeight} id='drawingCanvas'></canvas>\r\n                                <canvas className={this.state.displayImage ? '' : 'hidden'} width={this.state.imageWidth} height={this.state.imageHeight} id='myCanvas'></canvas>\r\n\r\n                                <img draggable='false'\r\n                                    className={this.state.displayImage ? 'map maphilighted' : 'hidden'}\r\n                                    onMouseDown={this.getCursorPosition.bind(this)}\r\n                                    onMouseUp={this.getCursorPosition.bind(this)}\r\n                                    onMouseMove={this.trackMouseMove.bind(this)}\r\n                                    src={this.state.imageData}\r\n                                    width={this.state.imageWidth} height={this.state.imageHeight} alt='officeMap' useMap='#officeMap' id='mainImage'\r\n                                />\r\n                                <div className={this.state.displayImage ? 'hidden' : 'main-title text-center'}>\r\n                                    <h1 className={this.state.displayImage ? 'hidden' : 'display-4 text-center'}>Teams map maker</h1>\r\n                                    <h2 className={this.state.displayImage ? 'hidden' : 'text-center'}>Start by uploading an image of your office map.</h2>\r\n                                </div>\r\n\r\n                                <div className='container col-md-8'>\r\n                                    <p className={this.state.displayImage ? '' : 'hidden'}> Use your mouse to map out your office rooms</p>\r\n                                    <div className={this.state.displayImage ? 'form-group' : 'hidden'}>\r\n                                        <div className={this.iconImageData === '' ? 'icon-preview col-md-4' : 'hidden'}>\r\n                                            <img src={this.state.iconImageData} alt='Teams icon' />\r\n                                        </div>\r\n\r\n                                        <div className={this.state.displayImage ? 'col-md-12' : 'hidden'}>\r\n                                            <div className='row'>\r\n                                                <div className='col-md-12'>\r\n                                                    <label className='control-label col'>Map name: (will be displayed in Teams left-side tab)</label>\r\n                                                    <input className='form-control col' type='text' onChange={this.handleTextUpdate.bind(this)} value={this.state.mapName} name='mName' />\r\n                                                </div>\r\n                                                <div className='col-md-6'>\r\n                                                    <label className='control-label col'>Room name:</label>\r\n                                                    <input className='form-control col' type='text' onChange={this.handleTextUpdate.bind(this)} value={this.state.roomName} name='rName' />\r\n                                                </div>\r\n                                                <div className='col-md-6'>\r\n                                                    <label className='control-label col'>Room capacity</label>\r\n                                                    <input className='form-control col' type='text' onChange={this.handleTextUpdate.bind(this)} value={this.state.roomCapacity} name='rCap' />\r\n                                                </div>\r\n                                                <div className='col-md-6'>\r\n                                                    <label className='control-label col'>Room booking email</label>\r\n                                                    <input className='form-control col' type='text' onChange={this.handleTextUpdate.bind(this)} value={this.state.roomEmail} name='rEmail' />\r\n                                                </div>\r\n                                                <div className='col col-sm-6'>\r\n                                                    <button className='btn btn-primary submitroombtn' onClick={this.submitRoom.bind(this)}>Add room</button>\r\n                                                    {\r\n                                                        this.state.errorText.trim() !== '' ? <p className='text-danger'>{this.state.errorText}</p>\r\n                                                            :\r\n                                                            <></>\r\n                                                    }\r\n                                                </div>\r\n                                                <div className='col-md-12'>\r\n                                                    <div className='col-sm-6'>\r\n                                                        <button className='btn btn-primary submitroombtn' onClick={this.exportMap.bind(this)}>Export map</button>\r\n                                                    </div>\r\n                                                    <br />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <RoomMap\r\n                                                hasHighlight={false}\r\n                                                mapName={'officeMap'}\r\n                                                canvasName='myCanvas'\r\n                                                rooms={this.state.rooms}\r\n                                                imageHeight={this.state.imageHeight}\r\n                                                imageWidth={this.state.imageWidth}\r\n                                                shouldScale={this.state.shouldScale} />\r\n                                            <RoomList rooms={this.state.rooms} handleRemoveRoom={this.handleRemoveRoom} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={this.state.displayImage ? 'hidden' : 'container imageselection'}>\r\n                                        <span className='btn btn-primary btn-file col-md-12 text-center'>\r\n                                            Select image<input type='file' onChange={this.handleImageUpdate.bind(this)} />\r\n                                        </span>\r\n                                        <p className='text-center'>The image will keep it's original size. Recommended size is approx. 1200 width but depends on general screen resolution.</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <Map queryString={window.location.href} />\r\n                }\r\n            </>);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { ImageMapper } from './components/ImageMapper'\r\nimport { Map } from './components/Map'\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n    static displayName = App.name;\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            rooms: []\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Route path='/' component={ImageMapper} />\r\n                <Route strict path='/map' component={Map} />\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}